spring.application.name=spring-cloud-webflux-avro-sink-only
logging.level.root=INFO
server.port=8079
########################KAFKA##################################
spring.cloud.stream.kafka.binder.consumer-properties.schema.registry.url=http://localhost:8081
spring.cloud.stream.kafka.binder.auto-create-topics=false
spring.cloud.stream.kafka.binder.configuration.security.protocol=PLAINTEXT
spring.cloud.stream.kafka.binder.brokers=localhost:9092
!spring.cloud.stream.bindings.fxRates-in-0.destination=order-fill-events
spring.cloud.stream.bindings.fxRates-in-0.destination=test
spring.cloud.stream.bindings.fxRates-in-0.consumer.use-native-decoding=true
spring.cloud.stream.bindings.fxRates-in-0.group=${spring.application.name}_FX_RATES_${random.uuid}
!spring.cloud.stream.bindings.fxRates-in-0.consumer.batch-mode=true
spring.cloud.stream.kafka.bindings.fxRates-in-0.consumer.configuration.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.cloud.stream.kafka.bindings.fxRates-in-0.consumer.configuration.value.deserializer=io.confluent.kafka.streams.serdes.avro.SpecificAvroDeserializer
spring.cloud.stream.kafka.bindings.fxRates-in-0.consumer.startOffset=earliest
spring.cloud.stream.kafka.bindings.fxRates-in-0.consumer.ack-mode=manual
#
spring.cloud.function.definition=fxRates
spring.cloud.compatibility-verifier.enabled=false
!spring.sleuth.function.enabled=false